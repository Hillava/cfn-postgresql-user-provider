---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
Resources:
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets available for the RDS DB Instance
      SubnetIds: !Ref 'Subnets'
  Database:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 10
      DBInstanceClass: db.t2.micro
      Engine: Postgres
      EngineVersion: 9.6.1
      VPCSecurityGroups:
        - !Ref 'DatabaseSecurityGroup'
      DBName: root
      MasterUsername: root
      MasterUserPassword: !GetAtt 'DBPassword.Secret'
      MultiAZ: 'false'
      Port: '5432'
      PubliclyAccessible: 'false'
      DBSubnetGroupName: !Ref 'DBSubnetGroup'
      DBParameterGroupName: !Ref 'DatabaseParameterGroup'
    DeletionPolicy: Snapshot
  DatabaseParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: Parameters for PostgreSQL
      Family: postgres9.6
      Parameters: {}
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: postgresql access
      VpcId: !Ref 'VPC'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          SourceSecurityGroupId: !Ref 'SecurityGroup'
      SecurityGroupEgress: []
      Tags:
        - Key: Name
          Value: !Sub 'postgres.${AWS::StackName}'
  DBPassword:
    Type: Custom::Secret
    Properties:
      Name: !Sub '/${AWS::StackName}/postgres/root/PGPASSWORD'
      Alphabet: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
      ReturnSecret: true
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-secret-provider'
  KongPassword:
    Type: Custom::Secret
    Properties:
      Name: !Sub '/${AWS::StackName}/postgres/kong/PGPASSWORD'
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-secret-provider'
  KongUserPassword:
    Type: Custom::Secret
    Properties:
      Name: !Sub '/${AWS::StackName}/postgres/kong-user/PGPASSWORD'
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-secret-provider'
  KongUser:
    Type: Custom::PostgreSQLUser
    DependsOn:
      - Database
      - DBPassword
      - KongPassword
    Properties:
      User: kong
      PasswordParameterName: !Sub '/${AWS::StackName}/postgres/kong/PGPASSWORD'
      Database:
        User: root
        Host: !GetAtt 'Database.Endpoint.Address'
        Port: !GetAtt 'Database.Endpoint.Port'
        DBName: root
        Password: !GetAtt 'DBPassword.Secret'
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-postgresql-user-provider-${VPC}'
  KongReaderUser:
    Type: Custom::PostgreSQLUser
    DependsOn:
      - Database
      - DBPassword
      - KongUserPassword
    Properties:
      User: kongreader
      WithDatabase: false
      PasswordParameterName: !Sub '/${AWS::StackName}/postgres/kong-user/PGPASSWORD'
      Database:
        User: root
        Host: !GetAtt 'Database.Endpoint.Address'
        Port: !GetAtt 'Database.Endpoint.Port'
        DBName: root
        Password: !GetAtt 'DBPassword.Secret'
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-postgresql-user-provider-${VPC}'
